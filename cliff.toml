# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "harilvfs"
repo = "carch"

[changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""

body = """
{% if version and previous.version -%}
## [{{ version | trim_start_matches(pat="v") }}](https://github.com/harilvfs/carch/compare/{{ previous.version }}...{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
{%- elif version -%}
## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{%- else -%}
## [unreleased]
{%- endif %}

{% for group, commits in commits | group_by(attribute="group") %}
### {{ group | striptags | trim | upper_first }}

{% for commit in commits %}
- [{{ commit.id | truncate(length=7, end="") }}](https://github.com/harilvfs/carch/commit/{{ commit.id }}) {% if commit.scope %} *({{ commit.scope | lower }})* {% endif %}{{ commit.message | upper_first | trim }}{%- if commit.remote.username %} by @{{ commit.remote.username }}{% endif %}{%- if commit.remote.pr_number %} in [#{{ commit.remote.pr_number }}](https://github.com/harilvfs/carch/pull/{{ commit.remote.pr_number }}){% endif %}{%- if commit.breaking %} [**breaking**]{% endif %}
{% endfor %}

{% endfor %}

"""

footer = """
<!-- generated by git-cliff -->
"""

trim = true

postprocessors = [
  { pattern = '<!-- Please read CONTRIBUTING.md before submitting any pull request. -->', replace = "" },
  { pattern = '>---+\n', replace = "" },
  { pattern = ' +\n', replace = "\n" },
]

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false

commit_preprocessors = [
  { pattern = '\\((\\w+\\s)?#([0-9]+)\\)', replace = "" },
  { pattern = '(Add setup script)', replace = "feat(setup): ${1}" },
  { pattern = '(Fix install command)', replace = "fix(install): ${1}" },
  { pattern = '(Improve logging)', replace = "chore(logging): ${1}" },
  { pattern = '(Update config defaults)', replace = "refactor(config): ${1}" },
  { pattern = '\\<[d]eatil\\>', replace = "detail" }
]

commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^docs", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  { message = "^(rust|cargo)", group = "<!-- 11 -->🦀 Rust" },
  { message = "^(ui|ux)", group = "<!-- 12 -->🖥️ UI/UX" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀️ Revert" },
  { message = ".*", group = "<!-- 10 -->💼 Other" },
]

filter_commits = false
topo_order = false
sort_commits = "oldest"
skip_tags = ""
ignore_tags = ""
tag_pattern = "v[0-9]+\\.[0-9]+\\.[0-9]+"
unreleased = ""
