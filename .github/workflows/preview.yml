name: Carch Preview
on:
  workflow_dispatch:
    inputs:
        tag_name:
          description: 'Tag name'
          required: true
  workflow_run:
    workflows: ["Carch Release"]
    types:
      - completed
jobs:
  generate_preview:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    environment: carch_env
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Install Git and curl
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git curl base-devel ffmpeg unzip fontconfig ttf-jetbrains-mono ttf-nerd-fonts-symbols cmake libuv json-c openssl libwebsockets
          pacman -S --noconfirm --needed nss libxss libxtst libxrandr libpng alsa-lib xdg-utils libcups freetype2 harfbuzz || true
          pacman -S --noconfirm --needed atk at-spi2-atk at-spi2-core cairo pango gtk3 dbus libxcomposite libxcursor libxdamage libxi || true
          pacman -S --noconfirm --needed libxkbcommon libxslt mesa ttf-liberation libglvnd libxkbfile vulkan-icd-loader gst-plugins-base-libs || true
          pacman -S --noconfirm --needed libx11 libxcb libxext libxfixes libxrender || true
          pacman -S --noconfirm --needed libpulse libsecret || true
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Install ttyd
        run: |
          cd /tmp
          git clone https://github.com/tsl0922/ttyd.git
          cd ttyd
          mkdir build
          cd build
          cmake ..
          make
          make install
          ldconfig
      - name: Get tag name ( Workflow Run )
        id: latest_tag
        uses: actions/github-script@v7
        if: github.event_name == 'workflow_run'
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return releases.data[0].tag_name;
      - name: Set tag name ( Workflow Run )
        if: github.event_name == 'workflow_run'
        run: echo "tag_name=${{ steps.latest_tag.outputs.result }}" >> $GITHUB_ENV
      - name: Set tag name ( Workflow Dispatch )
        if: github.event_name == 'workflow_dispatch'
        run: echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      - name: Download binary
        run: |
          curl -LO "https://github.com/${{ github.repository }}/releases/download/${{ env.tag_name }}/carch"
      - name: Set env
        run: |
          chmod +x carch
          mkdir -p build
          mv carch build/carch
          echo "${{ github.workspace }}/build" >> $GITHUB_PATH
      - name: Install VHS
        run: |
          pacman -S --noconfirm go
          go install github.com/charmbracelet/vhs@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Generate preview
        run: |
          cd .github
          export CHROME_ARGS="--no-sandbox --disable-setuid-sandbox"
          vhs preview.tape
      - name: Move preview
        run: mv .github/preview.gif .github/preview.gif
      - name: Create PR
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          commit-message: Preview for ${{ env.tag_name }}
          branch: feature/preview-${{ env.tag_name }}
          title: "Update preview for ${{ env.tag_name }}"
          labels: |
            documentation
          body: |
            Automated PR to update preview gif for version ${{ env.tag_name }}
            ![preview](https://raw.githubusercontent.com/${{ github.repository }}/feature/preview-${{ env.tag_name }}/.github/preview.gif)
        if: success()
