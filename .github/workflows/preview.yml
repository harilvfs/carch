name: Run Carch in Container and Capture GIF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  capture-carch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      - name: Install dependencies
        run: |
          pacman -Sy --noconfirm gum figlet util-linux asciinema ffmpeg tmux unzip zip base-devel git sudo ttf-jetbrains-mono ttf-fira-code ttf-dejavu ttf-liberation

      - name: Create Non-Root User
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

      - name: Install Yay (AUR Helper) as Non-Root User
        run: |
          sudo -u builder bash -c "cd /home/builder && git clone https://aur.archlinux.org/yay.git"
          sudo chown -R builder:builder /home/builder/yay
          sudo chmod -R 755 /home/builder/yay
          sudo -u builder bash -c "cd /home/builder/yay && makepkg -si --noconfirm"

      - name: Verify Yay Installation
        run: |
          sudo -u builder yay --version

      - name: Add Yay to Path
        run: |
          echo 'export PATH=$HOME/.local/bin:$PATH' >> /home/builder/.bashrc
          source /home/builder/.bashrc

      - name: Install Asciinema-Agg with Yay as Non-Root User
        run: |
          sudo -u builder bash -c "yay -S --noconfirm asciinema-agg || (sudo pacman -Syu --noconfirm && yay -S --noconfirm asciinema-agg)"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Carch
        run: |
          mkdir -p /usr/share/scripts
          cp build/carch /usr/bin/carch
          chmod +x /usr/bin/carch
          chmod +rw /usr/bin/carch
          cp source/zip/scripts.zip /usr/share/
          unzip /usr/share/scripts.zip -d /usr/share/
          chmod -R +rwx /usr/share/scripts
          chmod -R +rw /usr/share/scripts

      - name: Capture Carch Output in a Virtual Terminal
        run: |
          tmux new-session -d -s carch_session
          sleep 2  # Ensure tmux is fully started
          tmux send-keys -t carch_session "asciinema rec --cols 80 --rows 24 --theme asciinema carch_output.cast" Enter
          sleep 5  # Wait for recording to initialize
          tmux send-keys -t carch_session "carch" Enter
          sleep 5  # Let carch execute
          tmux send-keys -t carch_session Up  # Press Up arrow
          sleep 3  # Wait before pressing Enter
          tmux send-keys -t carch_session Enter  # Press Enter as the final action
          sleep 5  # Allow output to be captured
          tmux send-keys -t carch_session C-c  # Stop recording
          sleep 2
          tmux kill-session -t carch_session

      - name: Convert Recording to MP4
        run: |
          agg carch_output.cast carch_demo.mp4

      - name: Convert MP4 to High-Quality GIF
        run: |
          ffmpeg -y -i carch_demo.mp4 -vf "fps=30,scale=1280:-1:flags=lanczos,palettegen" palette.png
          ffmpeg -y -i carch_demo.mp4 -i palette.png -filter_complex "fps=30,scale=1280:-1:flags=lanczos[x];[x][1:v]paletteuse=dither=bayer" carch_demo.gif

      - name: Move GIF to .github Folder
        run: |
          mkdir -p .github
          cp carch_demo.gif .github/
          chmod +rw .github/carch_demo.gif

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory /__w/carch/carch

      - name: Commit and Push GIF to Repository
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .github/carch_demo.gif
          git commit -m "Update Carch demo GIF"
          git push

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: carch-demo-gif
          path: .github/carch_demo.gif

