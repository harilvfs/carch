name: Carch Preview
on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag to use for Carch binary'
        required: true
        default: 'latest'
jobs:
  generate_preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      
      - name: Get latest release tag if not specified
        id: get_tag
        run: |
          if [ "${{ github.event.inputs.tag_name }}" = "latest" ]; then
            LATEST_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
            echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          fi
      
      - name: Download Carch binary
        run: |
          curl -L "https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/carch" -o carch
          chmod +x carch
          sudo mv carch /usr/local/bin/
      
      - name: Create Dockerfile for VHS with dependencies
        run: |
          cat > Dockerfile.vhs << EOF
          FROM ghcr.io/charmbracelet/vhs
          
          # Install required dependencies
          RUN apt-get update && apt-get install -y fzf figlet
          EOF
      
      - name: Build custom VHS image
        run: |
          docker build -t vhs-with-deps -f Dockerfile.vhs .
      
      - name: Generate preview with VHS
        run: |
          docker run --rm \
            -v $PWD:/vhs \
            -v /usr/local/bin/carch:/usr/local/bin/carch \
            vhs-with-deps \
            /vhs/.github/preview.tape
      
      - name: List all files recursively
        run: |
          find . -name "*.gif" -type f
      
      - name: Move preview
        run: |
          mkdir -p .github
          # Try different possible locations
          if [ -f "preview.gif" ]; then
            echo "Found preview.gif in root directory"
            cp preview.gif .github/preview.gif
          elif [ -f ".github/preview.gif" ]; then
            echo "Preview already in .github directory"
          elif [ -f "/vhs/preview.gif" ]; then
            echo "Found in /vhs directory"
            cp /vhs/preview.gif .github/preview.gif
          else
            echo "Looking for preview.gif in other locations"
            PREVIEW_GIF=$(find . -name "preview.gif" -type f | head -n 1)
            if [ -n "$PREVIEW_GIF" ]; then
              echo "Found preview.gif at $PREVIEW_GIF"
              cp "$PREVIEW_GIF" .github/preview.gif
            else
              echo "Preview GIF was not found anywhere!"
              exit 1
            fi
          fi
      
      - name: Create PR
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Update preview GIF from release ${{ env.TAG_NAME }}"
          branch: feature/preview-update
          title: "Update preview GIF from release ${{ env.TAG_NAME }}"
          labels: |
            documentation
          body: |
            Automated PR to update preview GIF using Carch from release ${{ env.TAG_NAME }}
            ![preview](https://raw.githubusercontent.com/${{ github.repository }}/feature/preview-update/.github/preview.gif)
        if: success()
