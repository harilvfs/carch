name: Generate Carch Preview GIF
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1' # Weekly update
  workflow_dispatch:

# Add permissions block to grant write access to the repository
permissions:
  contents: write

jobs:
  generate-gif:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Install essential packages
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git base-devel sudo python python-venv unzip

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Make sure we fetch all history so we can push back
          fetch-depth: 0

      - name: Create Python virtual environment
        run: |
          python -m venv /tmp/venv
          source /tmp/venv/bin/activate
          pip install cairosvg
          
          # Verify installation in venv
          python -c "import cairosvg; print('CairoSVG installed!')"

      - name: Install asciinema and other tools
        run: |
          # Install packages from Arch repositories
          pacman -S --noconfirm asciinema wkhtmltopdf imagemagick ffmpeg

      - name: Create directories
        run: |
          mkdir -p /usr/share/scripts
          mkdir -p .github

      - name: Extract Carch script and supporting scripts
        run: |
          # Debug current directory and files
          pwd
          ls -la
          
          # Check if the file exists
          if [ -f "source/zip/scripts.zip" ]; then
            unzip -o source/zip/scripts.zip -d /usr/share/scripts || echo "Extraction failed"
            find /usr/share/scripts -name "*.sh" -exec chmod +x {} \;
          else
            echo "scripts.zip not found at expected location"
            find . -name "scripts.zip" -type f
          fi
          
          # Install carch executable
          if [ -f "build/carch" ]; then
            install -m 755 build/carch /usr/bin/carch
          else
            echo "carch binary not found at expected location"
            find . -name "carch" -type f
          fi
          
          # Check if carch is installed and executable
          which carch || echo "carch not found in PATH"

      - name: Record Terminal Session
        run: |
          # Create a script to simulate key presses
          cat > demo_script.sh << 'EOF'
          #!/bin/bash
          # Start carch or show a message if it's not available
          carch || echo "This is a demonstration of the Carch tool"
          # Give it a moment to initialize
          sleep 3
          # Simulate keypresses
          echo -e "\033[B" # Down arrow
          sleep 1
          echo -e "\033[A" # Up arrow
          sleep 1
          echo -e "\r"     # Enter
          sleep 3
          echo -e "\003"   # Ctrl+C
          EOF
          
          chmod +x demo_script.sh
          
          # Record the session using asciinema
          export TERM=xterm-256color
          asciinema rec -c "./demo_script.sh" -t "Carch Demo" carch.cast

      - name: Generate GIF directly from asciicast
        run: |
          # Create a simple HTML file that loads asciinema-player
          cat > player.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/asciinema-player@3.0.1/dist/bundle/asciinema-player.css">
            <style>
              body { margin: 0; padding: 0; background: black; }
              #player { width: 100%; height: 100vh; }
            </style>
          </head>
          <body>
            <div id="player"></div>
            <script src="https://cdn.jsdelivr.net/npm/asciinema-player@3.0.1/dist/bundle/asciinema-player.js"></script>
            <script>
              AsciinemaPlayer.create('./carch.cast', document.getElementById('player'), {
                fit: 'width',
                theme: 'monokai'
              });
            </script>
          </body>
          </html>
          EOF
          
          # Use wkhtmltopdf to convert the HTML to an image
          wkhtmltoimage --width 800 --height 600 --quality 100 player.html .github/carch.png
          
          # Convert the PNG to GIF
          convert -delay 10 -loop 0 .github/carch.png .github/carch.gif
          
          # Alternative: Use ImageMagick to create a simple animated GIF
          convert -size 800x600 -background black -fill green -font Courier -pointsize 20 \
            label:"Carch Terminal Utility\n\nRunning on Arch Linux\n\nNavigate with arrow keys\nPress Enter to select\nCtrl+C to exit" \
            .github/carch.gif

      - name: Upload GIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: carch-preview
          path: .github/carch.gif

      - name: Commit and push if changed
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add .github/carch.gif
          
          # Only commit and push if there are changes
          git diff --staged --quiet || (git commit -m "Update Carch preview GIF" && git push)
