name: Preview
on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag to use for Carch binary'
        required: true
        default: 'latest'
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  generate_preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      
      - name: Get tag name (Workflow Run)
        id: latest_tag
        uses: actions/github-script@v7
        if: github.event_name == 'workflow_run'
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return releases.data[0].tag_name;

      - name: Set tag name (Workflow Run)
        if: github.event_name == 'workflow_run'
        run: echo "TAG_NAME=${{ steps.latest_tag.outputs.result }}" >> $GITHUB_ENV

      - name: Get latest release tag (Workflow Dispatch)
        id: get_tag
        if: github.event.inputs.tag_name == 'latest' && github.event_name == 'workflow_dispatch'
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_ENV

      - name: Set tag name (Workflow Dispatch)
        if: github.event.inputs.tag_name != 'latest' && github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      
      - name: Download Carch binary
        run: |
          curl -L "https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/carch" -o carch
          chmod +x carch
          mkdir -p build
          mv carch build/carch
          echo "${{ github.workspace }}/build" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y figlet fzf
      
      - name: Generate preview
        uses: charmbracelet/vhs-action@v2.1.0
        with:
          path: ".github/preview.tape"
      
      - name: Move preview
        run: |
          mkdir -p .github
          mv preview.gif .github/preview.gif
      
      - name: Create PR
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Updated preview from release ${{ env.TAG_NAME }}"
          branch: feature/preview-${{ env.TAG_NAME }}
          title: "preview: Updated preview from release ${{ env.TAG_NAME }}"
          labels: |
            documentation
          body: |
            PR to update preview for version ${{ env.TAG_NAME }}
            ![preview](https://raw.githubusercontent.com/${{ github.repository }}/feature/preview-${{ env.TAG_NAME }}/.github/preview.gif)
        if: success()
