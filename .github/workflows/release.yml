name: Release

on:
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Version tag (e.g., v1.1.1)'
        required: true
        type: string
      tag_title:
        description: 'Release title (e.g., v1.1.1@Y-M-D)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up version variables
        run: |
          VERSION=$(echo "${{ github.event.inputs.tag_version }}" | sed 's/^v//')
          CURRENT_MONTH=$(date +'%B')
          CURRENT_YEAR=$(date +'%Y')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CURRENT_MONTH=$CURRENT_MONTH" >> $GITHUB_ENV
          echo "CURRENT_YEAR=$CURRENT_YEAR" >> $GITHUB_ENV

      - name: Update man page version
        run: |
          sed -i "s/\.TH \"carch\" \"1\" \"[^\"]*\" \"Carch [^\"]*\" \"Carch Manual\"/.TH \"carch\" \"1\" \"$CURRENT_MONTH $CURRENT_YEAR\" \"Carch $VERSION\" \"Carch Manual\"/" ./man/carch.1

      - name: Update Cargo.toml version
        run: |
          sed -i "/\[workspace.package\]/,/^\[/ s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml

      - name: Install Rust (nightly) with MUSL targets
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: x86_64-unknown-linux-musl,aarch64-unknown-linux-musl

      - name: Install rust-src
        run: rustup component add rust-src --toolchain nightly

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-index-

      - name: Run cargo build to update Cargo.lock
        run: cargo build --release

      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./man/carch.1 Cargo.toml Cargo.lock
          git commit -m "chore(release): update to ${{ github.event.inputs.tag_version }}"
          git push

      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install cross-rs for cross-compilation
        run: cargo install cross

      - name: Build x86_64 binary (with build-std)
        run: |
          cargo build \
            --release \
            --verbose \
            --target-dir=build \
            --target=x86_64-unknown-linux-musl \
            --all-features \
            -Z build-std=std,panic_abort \
            -Z build-std-features=panic_immediate_abort

      - name: Build aarch64 binary (with cross)
        run: |
          cross build \
            --release \
            --verbose \
            --target-dir=build \
            --target=aarch64-unknown-linux-musl \
            --all-features
          mv ./build/aarch64-unknown-linux-musl/release/carch ./build/aarch64-unknown-linux-musl/release/carch-aarch64

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries
          path: |
            ./build/x86_64-unknown-linux-musl/release/carch
            ./build/aarch64-unknown-linux-musl/release/carch-aarch64
          retention-days: 1

      - name: Create release body
        run: |
          BANNER="![Carch Banner](https://raw.githubusercontent.com/harilvfs/assets/refs/heads/main/carch/carch.jpg)"
          BADGES="![RPM Downloads](https://img.shields.io/github/downloads/harilvfs/carch/${{ github.event.inputs.tag_version }}/carch-$VERSION-1.fc42.x86_64.rpm?color=%235E81AC&style=for-the-badge&label=RPM%20Downloads&logoColor=85e185&labelColor=1c1c29) ![Binary x86_64](https://img.shields.io/github/downloads/harilvfs/carch/${{ github.event.inputs.tag_version }}/carch?color=%235E81AC&style=for-the-badge&label=x86_64%20Binary&logoColor=85e185&labelColor=1c1c29) ![Binary aarch64](https://img.shields.io/github/downloads/harilvfs/carch/${{ github.event.inputs.tag_version }}/carch-aarch64?color=%235E81AC&style=for-the-badge&label=aarch64%20Binary&logoColor=85e185&labelColor=1c1c29)"
          printf "%s\n\n%s\n\n**Refer to [CHANGELOG.md](https://github.com/harilvfs/carch/blob/main/CHANGELOG.md) for full details.**\n" "$BANNER" "$BADGES" > BODY.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag_version }}
          name: ${{ github.event.inputs.tag_title }}
          draft: false
          prerelease: true
          generate_release_notes: false
          body_path: BODY.md

      - name: Upload binaries
        run: |
          gh release upload ${{ github.event.inputs.tag_version }} \
            ./build/x86_64-unknown-linux-musl/release/carch \
            ./build/aarch64-unknown-linux-musl/release/carch-aarch64 \
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
