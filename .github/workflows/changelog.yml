name: Changelog & Docs

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.1.1)'
        required: true
      target_branch:
        description: 'Target branch for the PR'
        required: false
        default: 'main'
      update_docs:
        description: 'Update version in docs repo'
        required: false
        default: 'true'

jobs:
  update_docs_version:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.update_docs == 'true' }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: carch-org/docs
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 1
          
      - name: Update version in config.ts
        run: |
          CONFIG_FILE="docs/.vitepress/config.ts"
          VERSION="${{ github.event.inputs.version }}"

          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Error: Config file not found at $CONFIG_FILE"
            exit 1
          fi

          sed -i "s/text: \"[0-9]\+\.[0-9]\+\.[0-9]\+\",/text: \"${VERSION}\",/" "$CONFIG_FILE"

          grep -q "text: \"${VERSION}\"," "$CONFIG_FILE" || {
            echo "Failed to update version in $CONFIG_FILE"
            exit 1
          }

      - name: Create Pull Request for docs update
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "chore(release): update version to ${{ github.event.inputs.version }}"
          branch: update-docs-version/${{ github.event.inputs.version }}
          title: "Update docs version to ${{ github.event.inputs.version }}"
          body: |
            PR to update the version number in the documentation site config to ${{ github.event.inputs.version }}.
          base: ${{ github.event.inputs.target_branch }}
          delete-branch: true

  generate_changelog:
    runs-on: ubuntu-latest
    needs: update_docs_version
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install git-cliff
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          LATEST_TAG=$(curl -s https://api.github.com/repos/orhun/git-cliff/releases/latest | jq -r '.tag_name')
          FILE="git-cliff-${LATEST_TAG#v}-x86_64-unknown-linux-gnu.tar.gz"
          curl -sL "https://github.com/orhun/git-cliff/releases/download/${LATEST_TAG}/${FILE}" | tar -xz
          mv git-cliff-*/git-cliff /usr/local/bin/git-cliff
          chmod +x /usr/local/bin/git-cliff
          git-cliff --version

      - name: Generate changelog with git-cliff
        run: git-cliff -o CHANGELOG.md

      - name: Cleanup git-cliff installation files
        run: rm -rf git-cliff-*

      - name: Create Pull Request for changelog
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "chore: update CHANGELOG for v${{ github.event.inputs.version }}"
          branch: changelog/${{ github.event.inputs.version }}
          title: "changelog for v${{ github.event.inputs.version }}"
          body: |
            changelog for version v${{ github.event.inputs.version }}.
          base: ${{ github.event.inputs.target_branch }}
          delete-branch: false

