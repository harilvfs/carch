name: Release Notified
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number without v prefix (e.g. 1.1.1)'
        required: true

jobs:
  send-notifications:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get release info
        id: release_info
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="v${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare release message
        id: release_message
        run: |
          VERSION="${{ steps.release_info.outputs.version }}"
          RELEASE_TAG="$VERSION"

          RELEASE_MESSAGE="✨ Carch version $VERSION is out! Check the release section for details. ✨\n\nRelease: https://github.com/harilvfs/carch/releases/tag/$RELEASE_TAG"

          echo "text<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Prepare Telegram message
        id: telegram_message
        run: |
          VERSION="${{ steps.release_info.outputs.version }}"
          RELEASE_TAG="$VERSION"

          RELEASE_MESSAGE="✨ Carch version $VERSION is out! Check the release section for details. ✨%0A%0ARelease: https://github.com/harilvfs/carch/releases/tag/$RELEASE_TAG"

          echo "text<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RELEASE_MESSAGE: ${{ steps.release_message.outputs.text }}
        run: |
          FORMATTED_MESSAGE="${RELEASE_MESSAGE//$'\n'/\\n}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"$FORMATTED_MESSAGE\"}" \
            "$DISCORD_WEBHOOK_URL"

      - name: Send to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_THREAD_ID: ${{ secrets.TELEGRAM_THREAD_ID }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="-$TELEGRAM_CHAT_ID" \
            -d message_thread_id="$TELEGRAM_THREAD_ID" \
            -d text="${{ steps.telegram_message.outputs.text }}"
