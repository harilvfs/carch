name: Workflow Status Badge

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'
  workflow_run:
    workflows: ['*']
    types:
      - completed

jobs:
  generate-badge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Fetch workflow runs
        id: fetch-runs
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            
            const { data } = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              per_page: 100,
            });
            
            const workflowMap = new Map();
            data.workflow_runs.forEach(run => {
              const existingRun = workflowMap.get(run.workflow_id);
              if (!existingRun || new Date(run.created_at) > new Date(existingRun.created_at)) {
                workflowMap.set(run.workflow_id, run);
              }
            });
            
            const latestRuns = Array.from(workflowMap.values());
            const totalWorkflows = latestRuns.length;
            const successfulWorkflows = latestRuns.filter(run => run.conclusion === 'success').length;
            const failedWorkflows = latestRuns.filter(run => run.conclusion === 'failure').length;
            const otherWorkflows = totalWorkflows - successfulWorkflows - failedWorkflows;
            
            const successRate = totalWorkflows > 0 ? Math.round((successfulWorkflows / totalWorkflows) * 100) : 0;
            
            const statusColor = successRate >= 90 ? '#38A169' :
                               successRate >= 75 ? '#ECC94B' :
                               '#E53E3E';
                               
            const statusLabel = successRate >= 90 ? 'Healthy' : 
                              successRate >= 75 ? 'Warning' : 
                              'Critical';
            
            console.log(`Success Rate: ${successRate}%`);
            console.log(`Status Color: ${statusColor}`);
            console.log(`Total: ${totalWorkflows}`);
            console.log(`Success: ${successfulWorkflows}`);
            console.log(`Failed: ${failedWorkflows}`);
            console.log(`Other: ${otherWorkflows}`);
            
            core.setOutput('success_rate', successRate);
            core.setOutput('status_color', statusColor);
            core.setOutput('status_label', statusLabel);
            core.setOutput('total', totalWorkflows);
            core.setOutput('success', successfulWorkflows);
            core.setOutput('failed', failedWorkflows);
            core.setOutput('other', otherWorkflows);
      
      - name: Generate SVG Badge
        id: generate-svg
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            const successRate = ${{ steps.fetch-runs.outputs.success_rate }};
            const statusColor = '${{ steps.fetch-runs.outputs.status_color }}';
            const statusLabel = '${{ steps.fetch-runs.outputs.status_label }}';
            const total = ${{ steps.fetch-runs.outputs.total }};
            const success = ${{ steps.fetch-runs.outputs.success }};
            const failed = ${{ steps.fetch-runs.outputs.failed }};
            const other = ${{ steps.fetch-runs.outputs.other }};
            
            const now = new Date();
            const timestamp = now.toISOString().replace('T', ' ').substring(0, 19);
            
            const svg = `<?xml version="1.0" encoding="UTF-8"?>
            <svg width="180" height="40" viewBox="0 0 180 40" xmlns="http://www.w3.org/2000/svg">
              <defs>
                <linearGradient id="backgroundGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" stop-color="#1E293B" stop-opacity="1" />
                  <stop offset="100%" stop-color="#0F172A" stop-opacity="1" />
                </linearGradient>
                <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
                  <feGaussianBlur in="SourceGraphic" stdDeviation="2" result="blur" />
                  <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="glow" />
                  <feBlend in="SourceGraphic" in2="glow" mode="normal" />
                </filter>
              </defs>
              
              <rect x="0" y="0" width="180" height="40" rx="6" ry="6" fill="url(#backgroundGradient)" stroke="#374151" stroke-width="1" />
              
              <rect x="0" y="0" width="180" height="18" rx="6" ry="6" fill="#1E293B" />
              
              <text x="90" y="12" text-anchor="middle" font-family="system-ui, -apple-system, sans-serif" font-size="10" font-weight="bold" fill="white">Workflow Status</text>
              
              <circle cx="40" cy="28" r="8" fill="none" stroke="${statusColor}" stroke-width="2" />
              <text x="40" y="28" text-anchor="middle" dominant-baseline="middle" font-family="system-ui, -apple-system, sans-serif" font-size="8" font-weight="bold" fill="${statusColor}">${successRate}%</text>
              
              <text x="70" y="26" text-anchor="start" font-family="system-ui, -apple-system, sans-serif" font-size="8" fill="#22C55E">✓ ${success}</text>
              <text x="90" y="26" text-anchor="start" font-family="system-ui, -apple-system, sans-serif" font-size="8" fill="#EF4444">✗ ${failed}</text>
              <text x="110" y="26" text-anchor="start" font-family="system-ui, -apple-system, sans-serif" font-size="8" fill="#CBD5E1">Total: ${total}</text>
              
              <text x="175" y="36" text-anchor="end" font-family="system-ui, -apple-system, sans-serif" font-size="6" fill="#64748B">Updated: ${timestamp.split(' ')[1]}</text>
            </svg>`;
            
            if (!fs.existsSync('./badges')) {
              fs.mkdirSync('./badges', { recursive: true });
            }
            
            fs.writeFileSync('./badges/workflow-status.svg', svg);
            
            const html = `<!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Workflow Status Badge</title>
              <style>
                body {
                  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                  background-color: #f7fafc;
                  display: flex;
                  flex-direction: column;
                  align-items: center;
                  justify-content: center;
                  min-height: 100vh;
                  margin: 0;
                  padding: 20px;
                }
                .container {
                  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
                  border-radius: 15px;
                  overflow: hidden;
                  background-color: white;
                  padding: 30px;
                  max-width: 600px;
                  width: 100%;
                }
                h1 {
                  color: #2d3748;
                  margin-top: 0;
                  text-align: center;
                }
                .badge-container {
                  display: flex;
                  justify-content: center;
                  margin: 20px 0;
                }
                .info {
                  margin-top: 20px;
                  background-color: #f0f4f8;
                  padding: 15px;
                  border-radius: 8px;
                  font-size: 0.9rem;
                }
                code {
                  background-color: #edf2f7;
                  padding: 2px 5px;
                  border-radius: 4px;
                  font-family: monospace;
                }
              </style>
            </head>
            <body>
              <div class="container">
                <h1>GitHub Workflow Status</h1>
                <div class="badge-container">
                  <img src="workflow-status.svg" alt="Workflow Status Badge">
                </div>
                <div class="info">
                  <p>Add this badge to your README.md:</p>
                  <code>![Workflow Status](https://${context.repo.owner}.github.io/${context.repo.repo}/badges/workflow-status.svg)</code>
                  <p>Status: ${statusLabel === 'Healthy' ? '✅ Healthy' : statusLabel === 'Warning' ? '⚠️ Warning' : '❌ Critical'}</p>
                  <p>Total workflows: ${total} | Success: ${success} | Failed: ${failed} | Other: ${other}</p>
                  <p>Success rate: ${successRate}%</p>
                  <p><small>Last updated: ${timestamp}</small></p>
                </div>
              </div>
            </body>
            </html>`;
            
            fs.writeFileSync('./badges/index.html', html);
            
            console.log('Badge files created successfully!');
            
            fs.writeFileSync('./badges/index.html', html);
            
            console.log('Badge files created successfully!');
      
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: badges
          branch: gh-pages
          target-folder: badges
          clean: true
