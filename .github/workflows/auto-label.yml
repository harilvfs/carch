name: PR Label

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract commit messages
        id: extract-commits
        run: |
          MESSAGES=$(git log --format=%s ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          echo "MESSAGES<<EOF" >> $GITHUB_ENV
          echo "$MESSAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Label PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const messages = process.env.MESSAGES;
            const labels = new Set();
            
            const patterns = {
              enhancement: /\b(feat|feature|perf|performance)(\(.*\))?:/i,
              bug: /\b(fix|bugfix|bug)(\(.*\))?:/i,
              documentation: /\b(docs|doc|documentation)(\(.*\))?:/i,
              dependencies: /\b(chore|deps|dependencies)(\(.*\))?:/i,
              refactor: /\b(refactor)(\(.*\))?:/i,
              rust: /\b(rust)(\(.*\))?:/i,
              test: /\b(test|tests)(\(.*\))?:/i,
              github_actions: /\b(ci|github)(\(.*\))?:/i,
              build: /\b(build)(\(.*\))?:/i,
              remove: /\b(remove|delete)(\(.*\))?:/i,
              custom: /\b(custom)(\(.*\))?:/i,
              'UX/UI': /\b(ui|ux|UI|UX)(\(.*\))?:/i,
              update: /\b(update|upgrade)(\(.*\))?:/i
            };
            
            messages.split('\n').forEach(message => {
              for (const [label, pattern] of Object.entries(patterns)) {
                if (pattern.test(message)) {
                  labels.add(label);
                }
              }
            });
            
            const labelsArray = Array.from(labels);
            
            if (labelsArray.length > 0) {
              try {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: labelsArray
                });
                console.log(`Added labels: ${labelsArray.join(', ')}`);
              } catch (error) {
                console.error(`Error adding labels: ${error.message}`);
              }
            } else {
              console.log('No matching labels found in commit messages');
            }